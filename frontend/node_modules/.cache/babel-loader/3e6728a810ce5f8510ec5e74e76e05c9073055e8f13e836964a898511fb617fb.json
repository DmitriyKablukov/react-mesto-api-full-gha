{"ast":null,"code":"var _jsxFileName = \"/Users/dimakablukov/Downloads/react-mesto-api-full-gha-main/frontend/src/components/EditProfilePopup.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useContext } from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditProfilePopup(_ref) {\n  _s();\n  let {\n    isOpen,\n    onClose,\n    onUpdateUser\n  } = _ref;\n  const currentUser = useContext(CurrentUserContext);\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser, isOpen]);\n  function handleChangeName(e) {\n    setName(e.target.value);\n  }\n  function handleChangeDescription(e) {\n    setDescription(e.target.value);\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    onUpdateUser({\n      name,\n      description: description\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(PopupWithForm, {\n      name: \"info\",\n      title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n      buttonText: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n      onClose: onClose,\n      isOpen: isOpen,\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup__form-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChangeName,\n          value: name !== null && name !== void 0 ? name : '',\n          name: \"name\",\n          id: \"name\",\n          className: \"popup__input popup__input_data_name\",\n          required: \"\",\n          type: \"text\",\n          placeholder: \"\\u0418\\u043C\\u044F\",\n          minLength: 2,\n          maxLength: 40\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"popup__error\",\n          id: \"name-error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChangeDescription,\n          value: description !== null && description !== void 0 ? description : '',\n          name: \"description\",\n          id: \"description\",\n          className: \"popup__input popup__input_data_description\",\n          required: \"\",\n          type: \"text\",\n          placeholder: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\",\n          minLength: 2,\n          maxLength: 200\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"popup__error\",\n          id: \"description-error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(EditProfilePopup, \"G9LFWAI8ElI4DbM9ImILh8MVnsM=\");\n_c = EditProfilePopup;\nexport default EditProfilePopup;\n\n// import React from 'react';\n// import PopupWithForm from './PopupWithForm';\n// import { CurrentUserContext } from '../contexts/CurrentUserContext';\n\n// function EditProfilePopup( {isOpen, onClose, onUpdateUser}) {\n\n//   const currentUser = React.useContext(CurrentUserContext);\n//   React.useEffect(() => {\n//     setName(currentUser.name);\n//     setDescription(currentUser.about);\n//     }, [currentUser, isOpen]);\n\n//   const [name, setName] = React.useState('');\n//   const [description, setDescription] = React.useState('');\n\n//   function handleNameChange(e) {\n//     setName(e.target.value);\n//   }\n\n//   function handleDescriptionChange(e) {\n//     setDescription(e.target.value);\n//   }\n\n//   function handleSubmit(e) {\n//     e.preventDefault();\n//     // Передаём значения управляемых компонентов во внешний обработчик\n//     onUpdateUser({\n//       name,\n//       about: description,\n//     });\n//   }\n\n//   return(\n//     <PopupWithForm title='Редактировать профиль' \n//                    name='edit' \n//                    buttonText=\"Сохранить\" \n//                    isOpen={isOpen} \n//                    onClose={onClose} \n//                    onSubmit={handleSubmit}>\n//       <input type=\"text\" \n//              placeholder=\"Введите ваше имя\" \n//              className=\"form__input form__input_type_name\" \n//              name=\"name\" \n//              value={name || ''} \n//              onChange={handleNameChange} \n//              id=\"name-input\" \n//              required \n//              minLength=\"2\" \n//              maxLength=\"40\" \n//       />\n//       <span className=\"form__input-error name-input-error\"></span>\n//       <input type=\"text\" \n//              placeholder=\"Введите вашу профессию\" \n//              className=\"form__input form__input_type_job\" \n//              name=\"job\" \n//              value={description || ''} \n//              onChange={handleDescriptionChange} \n//              id=\"job-input\" \n//              required \n//              minLength=\"2\" \n//              maxLength=\"200\" \n//       />\n//       <span className=\"form__input-error job-input-error\"></span>\n//     </PopupWithForm> \n//   );\n// }\n\n// export default EditProfilePopup;\nvar _c;\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"names":["useState","useEffect","useContext","PopupWithForm","CurrentUserContext","jsxDEV","_jsxDEV","EditProfilePopup","_ref","_s","isOpen","onClose","onUpdateUser","currentUser","name","setName","description","setDescription","about","handleChangeName","e","target","value","handleChangeDescription","handleSubmit","preventDefault","children","title","buttonText","onSubmit","className","onChange","id","required","type","placeholder","minLength","maxLength","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dimakablukov/Downloads/react-mesto-api-full-gha-main/frontend/src/components/EditProfilePopup.js"],"sourcesContent":["import { useState, useEffect, useContext } from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser }) {\n  const currentUser = useContext(CurrentUserContext);\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n\n  useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser, isOpen]);\n\n  function handleChangeName(e) {\n    setName(e.target.value);\n  }\n\n  function handleChangeDescription(e) {\n    setDescription(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onUpdateUser({\n      name,\n      description: description,\n    });\n  }\n\n  return (\n    <div>\n      <PopupWithForm\n        name=\"info\"\n        title=\"Редактировать профиль\"\n        buttonText=\"Сохранить\"\n        onClose={onClose}\n        isOpen={isOpen}\n        onSubmit={handleSubmit}\n      >\n        <div className=\"popup__form-input\">\n          <input\n            onChange={handleChangeName}\n            value={name ?? ''}\n            name=\"name\"\n            id=\"name\"\n            className=\"popup__input popup__input_data_name\"\n            required=\"\"\n            type=\"text\"\n            placeholder=\"Имя\"\n            minLength={2}\n            maxLength={40}\n          />\n          <span className=\"popup__error\" id=\"name-error\" />\n          <input\n            onChange={handleChangeDescription}\n            value={description ?? ''}\n            name=\"description\"\n            id=\"description\"\n            className=\"popup__input popup__input_data_description\"\n            required=\"\"\n            type=\"text\"\n            placeholder=\"Описание\"\n            minLength={2}\n            maxLength={200}\n          />\n          <span className=\"popup__error\" id=\"description-error\" />\n        </div>\n      </PopupWithForm>\n    </div>\n  );\n}\n\nexport default EditProfilePopup;\n\n// import React from 'react';\n// import PopupWithForm from './PopupWithForm';\n// import { CurrentUserContext } from '../contexts/CurrentUserContext';\n\n// function EditProfilePopup( {isOpen, onClose, onUpdateUser}) {\n\n//   const currentUser = React.useContext(CurrentUserContext);\n//   React.useEffect(() => {\n//     setName(currentUser.name);\n//     setDescription(currentUser.about);\n//     }, [currentUser, isOpen]);\n\n//   const [name, setName] = React.useState('');\n//   const [description, setDescription] = React.useState('');\n\n//   function handleNameChange(e) {\n//     setName(e.target.value);\n//   }\n\n//   function handleDescriptionChange(e) {\n//     setDescription(e.target.value);\n//   }\n\n//   function handleSubmit(e) {\n//     e.preventDefault();\n//     // Передаём значения управляемых компонентов во внешний обработчик\n//     onUpdateUser({\n//       name,\n//       about: description,\n//     });\n//   }\n\n//   return(\n//     <PopupWithForm title='Редактировать профиль' \n//                    name='edit' \n//                    buttonText=\"Сохранить\" \n//                    isOpen={isOpen} \n//                    onClose={onClose} \n//                    onSubmit={handleSubmit}>\n//       <input type=\"text\" \n//              placeholder=\"Введите ваше имя\" \n//              className=\"form__input form__input_type_name\" \n//              name=\"name\" \n//              value={name || ''} \n//              onChange={handleNameChange} \n//              id=\"name-input\" \n//              required \n//              minLength=\"2\" \n//              maxLength=\"40\" \n//       />\n//       <span className=\"form__input-error name-input-error\"></span>\n//       <input type=\"text\" \n//              placeholder=\"Введите вашу профессию\" \n//              className=\"form__input form__input_type_job\" \n//              name=\"job\" \n//              value={description || ''} \n//              onChange={handleDescriptionChange} \n//              id=\"job-input\" \n//              required \n//              minLength=\"2\" \n//              maxLength=\"200\" \n//       />\n//       <span className=\"form__input-error job-input-error\"></span>\n//     </PopupWithForm> \n//   );\n// }\n\n// export default EditProfilePopup;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}